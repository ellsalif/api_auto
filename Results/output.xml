<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.2 (Python 3.9.2 on win32)" generated="20210531 19:24:57.893" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="C:\Users\admin\PycharmProjects\Mon_api\tests">
<suite id="s1-s1" name="Api" source="C:\Users\admin\PycharmProjects\Mon_api\tests\api.robot">
<test id="s1-s1-t1" name="Inserer un user dans la BD">
<kw name="Verifier que l'utilisateur n'existe pas dans la BD" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210531 19:24:58.957" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20210531 19:24:58.919" endtime="20210531 19:24:58.957"/>
</kw>
<kw name="Row Count Is 0" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password= md5('${PASSWORD}')</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<msg timestamp="20210531 19:24:58.957" level="INFO">Executing : Row Count Is 0  |  select id from users where username = 'salif' and password= md5('sal') </msg>
<msg timestamp="20210531 19:24:58.957" level="INFO">Executing : Row Count  |  select id from users where username = 'salif' and password= md5('sal') </msg>
<status status="PASS" starttime="20210531 19:24:58.957" endtime="20210531 19:24:58.957"/>
</kw>
<status status="PASS" starttime="20210531 19:24:58.919" endtime="20210531 19:24:58.957"/>
</kw>
<kw name="Inscription de l'utilisateur par une requet post" library="signupBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session1</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210531 19:24:58.973" level="INFO">Creating Session using : alias=session1, url=http://localhost/demo/demo/api/user/signup.php, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210531 19:24:58.973" endtime="20210531 19:24:58.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210531 19:24:58.973" level="INFO">${data} = {'username': 'salif', 'password': 'sal'}</msg>
<status status="PASS" starttime="20210531 19:24:58.973" endtime="20210531 19:24:58.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210531 19:24:58.973" level="INFO">${headers} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20210531 19:24:58.973" endtime="20210531 19:24:58.973"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session1</arg>
<arg>signup.php</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210531 19:24:59.004" level="INFO">POST Request : url=http://localhost/demo/demo/api/user/signup.php/signup.php 
 path_url=/demo/demo/api/user/signup.php/signup.php 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': '27'} 
 body=username=salif&amp;password=sal 
 </msg>
<msg timestamp="20210531 19:24:59.004" level="INFO">POST Response : url=http://localhost/demo/demo/api/user/signup.php/signup.php 
 status=200, reason=OK 
 headers={'Date': 'Mon, 31 May 2021 17:24:58 GMT', 'Server': 'Apache/2.4.46 (Win64) PHP/7.3.21', 'X-Powered-By': 'PHP/7.3.21', 'Content-Length': '77', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":true,"message":"Successfully Signup!","id":"47","username":"salif"} 
 </msg>
<msg timestamp="20210531 19:24:59.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210531 19:24:58.973" endtime="20210531 19:24:59.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210531 19:24:59.004" level="INFO">${json} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.004" endtime="20210531 19:24:59.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 19:24:59.004" level="INFO">&lt;bound method Response.json of &lt;Response [200]&gt;&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.004" endtime="20210531 19:24:59.004"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210531 19:24:59.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.004" endtime="20210531 19:24:59.004"/>
</kw>
<status status="PASS" starttime="20210531 19:24:58.957" endtime="20210531 19:24:59.004"/>
</kw>
<kw name="Verifier que l'utilisateur est ajoutÃ© une fois dans la bd" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210531 19:24:59.004" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20210531 19:24:59.004" endtime="20210531 19:24:59.020"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password= md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20210531 19:24:59.020" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'salif' and password= md5('sal')  |  1 </msg>
<msg timestamp="20210531 19:24:59.020" level="INFO">Executing : Row Count  |  select id from users where username = 'salif' and password= md5('sal') </msg>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.020"/>
</kw>
<status status="PASS" starttime="20210531 19:24:59.004" endtime="20210531 19:24:59.020"/>
</kw>
<tag>First</tag>
<status status="PASS" starttime="20210531 19:24:58.919" endtime="20210531 19:24:59.020"/>
</test>
<test id="s1-s1-t2" name="Inseretion du meme user">
<kw name="Inscription du meme user via la requete post" library="signupBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session2</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210531 19:24:59.020" level="INFO">Creating Session using : alias=session2, url=http://localhost/demo/demo/api/user/signup.php, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.020"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210531 19:24:59.020" level="INFO">${data} = {'username': 'salif', 'password': 'sal'}</msg>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.020"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210531 19:24:59.020" level="INFO">${headers} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.020"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session2</arg>
<arg>signup.php</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210531 19:24:59.051" level="INFO">POST Request : url=http://localhost/demo/demo/api/user/signup.php/signup.php 
 path_url=/demo/demo/api/user/signup.php/signup.php 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': '27'} 
 body=username=salif&amp;password=sal 
 </msg>
<msg timestamp="20210531 19:24:59.051" level="INFO">POST Response : url=http://localhost/demo/demo/api/user/signup.php/signup.php 
 status=200, reason=OK 
 headers={'Date': 'Mon, 31 May 2021 17:24:59 GMT', 'Server': 'Apache/2.4.46 (Win64) PHP/7.3.21', 'X-Powered-By': 'PHP/7.3.21', 'Content-Length': '53', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":false,"message":"Username already exists!"} 
 </msg>
<msg timestamp="20210531 19:24:59.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${jsondata}</var>
<arg>${response.json}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210531 19:24:59.051" level="INFO">${jsondata} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.051" endtime="20210531 19:24:59.057"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210531 19:24:59.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 19:24:59.057" endtime="20210531 19:24:59.057"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Username already exists!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210531 19:24:59.057" endtime="20210531 19:24:59.057"/>
</kw>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.057"/>
</kw>
<kw name="Verifier que le user n'est pas dupliquer dans la DB" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210531 19:24:59.057" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20210531 19:24:59.057" endtime="20210531 19:24:59.073"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password= md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20210531 19:24:59.073" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'salif' and password= md5('sal')  |  1 </msg>
<msg timestamp="20210531 19:24:59.073" level="INFO">Executing : Row Count  |  select id from users where username = 'salif' and password= md5('sal') </msg>
<status status="PASS" starttime="20210531 19:24:59.073" endtime="20210531 19:24:59.073"/>
</kw>
<status status="PASS" starttime="20210531 19:24:59.057" endtime="20210531 19:24:59.073"/>
</kw>
<tag>Second</tag>
<status status="PASS" starttime="20210531 19:24:59.020" endtime="20210531 19:24:59.073"/>
</test>
<test id="s1-s1-t3" name="Authentifier utilisateur">
<kw name="Verifier que l'utilisateur existe dans la BD" library="loginBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210531 19:24:59.073" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20210531 19:24:59.073" endtime="20210531 19:24:59.073"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password= md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20210531 19:24:59.073" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'salif' and password= md5('sal')  |  1 </msg>
<msg timestamp="20210531 19:24:59.073" level="INFO">Executing : Row Count  |  select id from users where username = 'salif' and password= md5('sal') </msg>
<status status="PASS" starttime="20210531 19:24:59.073" endtime="20210531 19:24:59.089"/>
</kw>
<status status="PASS" starttime="20210531 19:24:59.073" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Authentifier utilisateur dans l'application" library="loginBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session3</arg>
<arg>${WEBSITE_LINK1}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210531 19:24:59.089" level="INFO">Creating Session using : alias=session3, url=http://localhost/demo/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session3</arg>
<arg>/</arg>
<arg>login.php?username=${USERNAME}&amp;password=${PASSWORD})</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210531 19:24:59.089" level="FAIL">TypeError: request() got an unexpected keyword argument 'login.php?username'</msg>
<status status="FAIL" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${jsondata}</var>
<arg>${response.json}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${jsondata}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${jsondata()['message']}</arg>
<arg>Successfully Login!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<status status="FAIL" starttime="20210531 19:24:59.089" endtime="20210531 19:24:59.089"/>
</kw>
<tag>Third</tag>
<status status="FAIL" starttime="20210531 19:24:59.073" endtime="20210531 19:24:59.089">TypeError: request() got an unexpected keyword argument 'login.php?username'</status>
</test>
<test id="s1-s1-t4" name="Supprimer utilisateur">
<kw name="Supprimer utilisateur de la BD" library="loginBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210531 19:24:59.104" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20210531 19:24:59.104" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>DELETE FROM users WHERE username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20210531 19:24:59.120" level="INFO">Executing : Execute SQL String  |  DELETE FROM users WHERE username = 'salif' and password = md5('sal') </msg>
<status status="PASS" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20210531 19:24:59.120" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<status status="PASS" starttime="20210531 19:24:59.104" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Authentifier utilisateur inexistant dans l'application" library="loginBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session4</arg>
<arg>${WEBSITE_LINK1}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210531 19:24:59.120" level="INFO">Creating Session using : alias=session4, url=http://localhost/demo/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>request</arg>
<arg>session4</arg>
<arg>login.php?username=${USERNAME}&amp;password=${PASSWORD}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20210531 19:24:59.120" level="FAIL">TypeError: request() got an unexpected keyword argument 'login.php?username'</msg>
<status status="FAIL" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${jsondata}</var>
<arg>${response.json}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Invalid Username or Password!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<status status="FAIL" starttime="20210531 19:24:59.120" endtime="20210531 19:24:59.120"/>
</kw>
<tag>Fourth</tag>
<status status="FAIL" starttime="20210531 19:24:59.104" endtime="20210531 19:24:59.120">TypeError: request() got an unexpected keyword argument 'login.php?username'</status>
</test>
<status status="FAIL" starttime="20210531 19:24:57.945" endtime="20210531 19:24:59.135"/>
</suite>
<status status="FAIL" starttime="20210531 19:24:57.893" endtime="20210531 19:24:59.135"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">First</stat>
<stat pass="0" fail="1" skip="0">Fourth</stat>
<stat pass="1" fail="0" skip="0">Second</stat>
<stat pass="0" fail="1" skip="0">Third</stat>
</tag>
<suite>
<stat pass="2" fail="2" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="2" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
